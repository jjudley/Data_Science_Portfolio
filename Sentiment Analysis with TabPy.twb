<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.21.0110.1657                               -->
<workbook original-version='18.1' source-build='2020.3.5 (20203.21.0110.1657)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='tweetsv3 (Tweets)' inline='true' name='federated.0b7vdy90w0oymy12s07ge16yq2zg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tweets' name='excel-direct.0bioat80blfhsf1dvqidz02njchv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Judley Joseph/Downloads/Tweets.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0bioat80blfhsf1dvqidz02njchv' name='tweetsv3' table='[tweetsv3$]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='tweet_id' ordinal='0' />
            <column datatype='string' name='author_id' ordinal='1' />
            <column datatype='boolean' name='inbound' ordinal='2' />
            <column datatype='string' name='created_at' ordinal='3' />
            <column datatype='string' name='text' ordinal='4' />
            <column datatype='string' name='response_tweet_id' ordinal='5' />
            <column datatype='integer' name='in_response_to_tweet_id' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0bioat80blfhsf1dvqidz02njchv' name='tweetsv3' table='[tweetsv3$]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='tweet_id' ordinal='0' />
            <column datatype='string' name='author_id' ordinal='1' />
            <column datatype='boolean' name='inbound' ordinal='2' />
            <column datatype='string' name='created_at' ordinal='3' />
            <column datatype='string' name='text' ordinal='4' />
            <column datatype='string' name='response_tweet_id' ordinal='5' />
            <column datatype='integer' name='in_response_to_tweet_id' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[tweetsv3]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweet_id]</local-name>
            <parent-name>[tweetsv3]</parent-name>
            <remote-alias>tweet_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>author_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[author_id]</local-name>
            <parent-name>[tweetsv3]</parent-name>
            <remote-alias>author_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inbound</remote-name>
            <remote-type>11</remote-type>
            <local-name>[inbound]</local-name>
            <parent-name>[tweetsv3]</parent-name>
            <remote-alias>inbound</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_at</remote-name>
            <remote-type>130</remote-type>
            <local-name>[created_at]</local-name>
            <parent-name>[tweetsv3]</parent-name>
            <remote-alias>created_at</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>text</remote-name>
            <remote-type>130</remote-type>
            <local-name>[text]</local-name>
            <parent-name>[tweetsv3]</parent-name>
            <remote-alias>text</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>response_tweet_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[response_tweet_id]</local-name>
            <parent-name>[tweetsv3]</parent-name>
            <remote-alias>response_tweet_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>in_response_to_tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[in_response_to_tweet_id]</local-name>
            <parent-name>[tweetsv3]</parent-name>
            <remote-alias>in_response_to_tweet_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='TweetTo' datatype='string' name='[Calculation_1134907120160866304]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF INT(RIGHT(REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_] {0,15})&apos;),LEN(REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_]{0,15})&apos;))-1)) * 1 = INT(RIGHT(REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_] {0,15})&apos;),LEN(REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_]{0,15})&apos;))-1)) THEN &quot;@Customer&quot;&#13;&#10;ELSE REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_] {0,15})&apos;)&#13;&#10;END' />
      </column>
      <column caption='compound' datatype='real' name='[Calculation_911697463553277952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;    from nltk.sentiment.vader import SentimentIntensityAnalyzer &#13;&#10;    analyzer = SentimentIntensityAnalyzer()&#13;&#10;    sa = []&#13;&#10;    for i in range(0, len(_arg1)):&#13;&#10;        a = analyzer.polarity_scores(_arg1[i])[&apos;compound&apos;] &#13;&#10;        sa.append(a)&#13;&#10;    return sa&#13;&#10;   &quot;, ATTR([text]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='sentiment' datatype='string' name='[Calculation_911697463559233538]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_911697463553277952] &gt; 0 THEN &quot;Positive&quot; &#13;&#10;ELSEIF [Calculation_911697463553277952] = 0 THEN &quot;Neutral&quot;&#13;&#10;ELSE &quot;Negative&quot;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='tweetsv3' datatype='table' name='[__tableau_internal_object_id__].[tweetsv3_743325941A184813B7E1F371794827E1]' role='measure' type='quantitative' />
      <column caption='Author Id' datatype='string' name='[author_id]' role='dimension' type='nominal' />
      <column caption='Created At' datatype='string' name='[created_at]' role='dimension' type='nominal' />
      <column caption='In Response To Tweet Id' datatype='integer' name='[in_response_to_tweet_id]' role='dimension' type='ordinal' />
      <column caption='Inbound' datatype='boolean' name='[inbound]' role='dimension' type='nominal' />
      <column caption='Response Tweet Id' datatype='string' name='[response_tweet_id]' role='dimension' type='nominal' />
      <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
      <column caption='Tweet Id' datatype='integer' name='[tweet_id]' role='dimension' type='ordinal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Judley Joseph/Documents/My Tableau Repository/Datasources/tweetsv3 (Tweets).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/22/2021 08:54:40 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='tweetsv3 (Tweets)' increment-value='%null%' refresh-type='create' rows-inserted='15000' timestamp-start='2021-02-22 20:54:40.900' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>tweet_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tweet_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tweet_id</remote-alias>
              <ordinal>0</ordinal>
              <family>tweetsv3</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15000</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>author_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[author_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>author_id</remote-alias>
              <ordinal>1</ordinal>
              <family>tweetsv3</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2550</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>inbound</remote-name>
              <remote-type>11</remote-type>
              <local-name>[inbound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>inbound</remote-alias>
              <ordinal>2</ordinal>
              <family>tweetsv3</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>created_at</remote-name>
              <remote-type>129</remote-type>
              <local-name>[created_at]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>created_at</remote-alias>
              <ordinal>3</ordinal>
              <family>tweetsv3</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13056</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[text]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>text</remote-alias>
              <ordinal>4</ordinal>
              <family>tweetsv3</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15000</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>response_tweet_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[response_tweet_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>response_tweet_id</remote-alias>
              <ordinal>5</ordinal>
              <family>tweetsv3</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11428</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>in_response_to_tweet_id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[in_response_to_tweet_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>in_response_to_tweet_id</remote-alias>
              <ordinal>6</ordinal>
              <family>tweetsv3</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6909</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[tweetsv3_743325941A184813B7E1F371794827E1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='tweetsv3' id='tweetsv3_743325941A184813B7E1F371794827E1'>
            <properties context=''>
              <relation connection='excel-direct.0bioat80blfhsf1dvqidz02njchv' name='tweetsv3' table='[tweetsv3$]' type='table'>
                <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='tweet_id' ordinal='0' />
                  <column datatype='string' name='author_id' ordinal='1' />
                  <column datatype='boolean' name='inbound' ordinal='2' />
                  <column datatype='string' name='created_at' ordinal='3' />
                  <column datatype='string' name='text' ordinal='4' />
                  <column datatype='string' name='response_tweet_id' ordinal='5' />
                  <column datatype='integer' name='in_response_to_tweet_id' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='tweetsv3 (Tweets)' name='federated.0b7vdy90w0oymy12s07ge16yq2zg' />
          </datasources>
          <datasource-dependencies datasource='federated.0b7vdy90w0oymy12s07ge16yq2zg'>
            <column caption='TweetTo' datatype='string' name='[Calculation_1134907120160866304]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF INT(RIGHT(REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_] {0,15})&apos;),LEN(REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_]{0,15})&apos;))-1)) * 1 = INT(RIGHT(REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_] {0,15})&apos;),LEN(REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_]{0,15})&apos;))-1)) THEN &quot;@Customer&quot;&#13;&#10;ELSE REGEXP_EXTRACT([text],&apos;(@[a-zA-Z0-9_] {0,15})&apos;)&#13;&#10;END' />
            </column>
            <column caption='compound' datatype='real' name='[Calculation_911697463553277952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SCRIPT_REAL(&quot;&#13;&#10;    from nltk.sentiment.vader import SentimentIntensityAnalyzer &#13;&#10;    analyzer = SentimentIntensityAnalyzer()&#13;&#10;    sa = []&#13;&#10;    for i in range(0, len(_arg1)):&#13;&#10;        a = analyzer.polarity_scores(_arg1[i])[&apos;compound&apos;] &#13;&#10;        sa.append(a)&#13;&#10;    return sa&#13;&#10;   &quot;, ATTR([text]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='sentiment' datatype='string' name='[Calculation_911697463559233538]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_911697463553277952] &gt; 0 THEN &quot;Positive&quot; &#13;&#10;ELSEIF [Calculation_911697463553277952] = 0 THEN &quot;Neutral&quot;&#13;&#10;ELSE &quot;Negative&quot;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Author Id' datatype='string' name='[author_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1134907120160866304]' derivation='None' name='[none:Calculation_1134907120160866304:nk]' pivot='key' type='nominal' />
            <column-instance column='[author_id]' derivation='None' name='[none:author_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[text]' derivation='None' name='[none:text:nk]' pivot='key' type='nominal' />
            <column-instance column='[tweet_id]' derivation='None' name='[none:tweet_id:ok]' pivot='key' type='ordinal' />
            <column caption='Text' datatype='string' name='[text]' role='dimension' type='nominal' />
            <column caption='Tweet Id' datatype='integer' name='[tweet_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_911697463553277952]' derivation='User' name='[usr:Calculation_911697463553277952:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_911697463553277952]' derivation='User' name='[usr:Calculation_911697463553277952:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_911697463559233538]' derivation='User' name='[usr:Calculation_911697463559233538:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0b7vdy90w0oymy12s07ge16yq2zg].[Calculation_911697463553277952]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463553277952:qk:1]' included-values='in-range'>
            <min>-0.95840000000000003</min>
            <max>0.97250000000000003</max>
          </filter>
          <filter class='categorical' column='[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463559233538:nk:1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_911697463559233538:nk:1]' member='&quot;Negative&quot;' />
              <groupfilter function='member' level='[usr:Calculation_911697463559233538:nk:1]' member='&quot;Neutral&quot;' />
              <groupfilter function='member' level='[usr:Calculation_911697463559233538:nk:1]' member='&quot;Positive&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463559233538:nk:1]</column>
            <column>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463553277952:qk:1]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='310' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463553277952:qk:1]' />
              <text column='[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463553277952:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:tweet_id:ok] / ([federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:text:nk] / ([federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:author_id:nk] / ([federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:Calculation_1134907120160866304:nk] / [federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463559233538:nk:1]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{295FCA27-A010-4F14-B52E-66F9F40A70FD}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463553277952:qk:1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:Calculation_1134907120160866304:nk]</field>
            <field>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:Calculation_911697463561969667:nk]</field>
            <field>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:author_id:nk]</field>
            <field>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:text:nk]</field>
            <field>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[none:tweet_id:ok]</field>
            <field>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463553277952:ok]</field>
            <field>[federated.0b7vdy90w0oymy12s07ge16yq2zg].[usr:Calculation_911697463559233538:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5296C375-8041-40C6-99F9-7AC7C165F8D5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
